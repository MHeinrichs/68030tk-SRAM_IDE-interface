<html><body>
<pre>
 
cpldfit:  version P.68d                             Xilinx Inc.
                                  No Fit Report
Design Name: RAMCtrl                             Date:  5-19-2014, 10:03PM
Device Used: XC9572XL-10-TQ100
Fitting Status: Placement Failed

**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'RAMCtrl.ise'.
INFO:Cpld - Inferring BUFG constraint for signal 'clk' based upon the LOC
   constraint 'P22'. It is recommended that you declare this BUFG explicitedly
   in your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
WARNING:Cpld:1007 - Removing unused input(s) 'A<14>'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'A<15>'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'A<8>'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:828 - Signal 'Mtrien_Dout.CE' has been minimized to 'VCC'.
     The signal is removed.
WARNING:Cpld:896 - Unable to map all desired signals into function block, FB1,
   because too many function block product terms are required. Buffering output
   signal DSACK<0> to allow all signals assigned to this function block to be
   placed.
WARNING:Cpld:896 - Unable to map all desired signals into function block, FB1,
   because too many function block product terms are required. Buffering output
   signal nWE to allow all signals assigned to this function block to be placed.
WARNING:Cpld:896 - Unable to map all desired signals into function block, FB1,
   because too many function block product terms are required. Buffering output
   signal nOE to allow all signals assigned to this function block to be placed.
WARNING:Cpld:896 - Unable to map all desired signals into function block, FB2,
   because too many function block product terms are required. Buffering output
   signal DSACK<1> to allow all signals assigned to this function block to be
   placed.
ERROR:Cpld:892 - Cannot place signal $OpTx$FX_DC$48. Consider reducing the
   collapsing input limit or the product term limit to prevent the fitter from
   creating high input and/or high product term functions.
ERROR:Cpld:868 - Cannot fit the design into any of the specified devices with
   the selected implementation options.
*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
56 /72  ( 78%) 292 /360  ( 81%) 188/216 ( 87%)   28 /72  ( 39%) 63 /72  ( 87%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1          15/18       48/54       80/90      15/18
FB2          17/18       47/54       46/90      18/18*
FB3          12/18       49/54       84/90      14/18
FB4          12/18       44/54       82/90      16/18
             -----       -----       -----      -----    
             56/72      188/216     292/360     63/72 

* - Resource is exhausted

** Global Control Resources **

Global clock net(s) unused.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   34          34    |  I/O              :    59      66
Output        :   23          23    |  GCK/IO           :     1       3
Bidirectional :    4           4    |  GTS/IO           :     2       2
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    1           1    |
                 ----        ----
        Total     63          63

** Power Data **

There are 63 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
*************************  Summary of Mapped Logic  ************************

** 27 Outputs **

Signal                        Total Total Loc     Pin  Pin     Pin     
Name                          Pts   Inps          No.  Type    Use     
nOE                           1     1     FB1_1   16   I/O     O       
DSACK<0>                      2     10    FB1_2   13   I/O     O       
BYTE<2>                       2     5     FB1_3   18   I/O     O       
D<3>                          10    11    FB1_4   20   I/O     I/O     
BYTE<0>                       4     5     FB1_5   14   I/O     O       
BYTE<1>                       3     5     FB1_6   15   I/O     O       
D<2>                          9     11    FB1_7   25   I/O     I/O     
BYTE<3>                       2     3     FB1_8   17   I/O     O       
D<0>                          11    11    FB1_10  28   I/O     I/O     
nWE                           1     1     FB1_12  33   I/O     O       
D<1>                          11    11    FB1_15  29   I/O     I/O     
nCS2                          8     15    FB1_17  30   I/O     O       
IO4                           11    12    FB1_18  40   I/O     O       
IDE_A<2>                      1     1     FB2_2   94   I/O     O       
IDE_CS<0>                     1     1     FB2_3   91   I/O     O       
IDE_A<0>                      1     1     FB2_4   93   I/O     O       
IDE_A<1>                      1     1     FB2_5   95   I/O     O       
IDE_R                         1     12    FB2_6   96   I/O     O       
IDE_W                         1     11    FB2_8   97   I/O     O       
ROM_ENABLE                    1     10    FB2_13  8    I/O     O       
nRAM_SEL                      19    26    FB2_15  11   I/O     O       
DSACK<1>                      2     10    FB2_17  12   I/O     O       
IDE_CS<1>                     1     1     FB2_18  92   I/O     O       
IO5                           2     11    FB3_1   41   I/O     O       
nCS1                          8     15    FB3_2   32   I/O     O       
INT2                          1     10    FB3_9   42   I/O     O       
STERM                         0     0     FB4_17  90   I/O     O       

** 29 Buried Nodes **

Signal                        Total Total Loc     
Name                          Pts   Inps          
IDE_BASEADR<0>                2     29    FB1_9   
SHUT_UP<1>                    3     29    FB1_11  
IDE_BASEADR<7>                2     29    FB2_1   
IDE_BASEADR<3>                2     29    FB2_7   
IDE_BASEADR<1>                2     29    FB2_9   
BASEADR_4MB<2>                2     30    FB2_10  
BASEADR_4MB<0>                2     29    FB2_11  
BASEADR_4MB<1>                3     30    FB2_12  
SHUT_UP<0>                    4     29    FB2_16  
IDE_BASEADR<4>                2     29    FB3_3   
DSACK_16BIT                   22    33    FB3_5   
IDE_BASEADR<2>                2     29    FB3_7   
BASEADR<0>                    2     28    FB3_8   
DSACK<1>_BUFR                 19    27    FB3_11  
BASEADR<1>                    2     28    FB3_13  
IDE_DSACK_D1                  20    30    FB3_15  
IDE_BASEADR<6>                2     29    FB3_17  
IDE_BASEADR<5>                2     29    FB3_18  
IDE_ENABLE                    1     12    FB4_1   
ROM_OUT_ENABLE_S              19    23    FB4_2   
BASEADR<2>                    2     28    FB4_4   
AUTO_CONFIG_DONE<0>           2     26    FB4_5   
$OpTx$FX_DC$47                2     2     FB4_6   
$OpTx$$OpTx$FX_DC$69_INV$483  2     10    FB4_7   
nWE_BUFR                      16    20    FB4_8   
AUTO_CONFIG_DONE<1>           2     27    FB4_10  
nOE_BUFR                      16    20    FB4_14  
IDE_DSACK_D0                  18    22    FB4_16  
Mtrien_Dout                   2     20    FB4_18  

** 36 Inputs **

Signal                        Loc     Pin  Pin     Pin     
Name                                  No.  Type    Use     
clk                           FB1_9   22   GCK/I/O GCK
IDE_WAIT                      FB1_16  39   I/O     I
A<31>                         FB2_1   87   I/O     I
A<25>                         FB2_7   3    GTS/I/O I
reset                         FB2_9   99   GSR/I/O GSR
nAS                           FB2_10  1    I/O     I
SIZ<1>                        FB2_11  4    GTS/I/O I
SIZ<0>                        FB2_12  6    I/O     I
nDS                           FB2_14  9    I/O     I
RW                            FB2_16  10   I/O     I
A<2>                          FB3_4   50   I/O     I
A<0>                          FB3_6   53   I/O     I
A<5>                          FB3_7   54   I/O     I
A<6>                          FB3_10  60   I/O     I
A<1>                          FB3_11  52   I/O     I
A<11>                         FB3_12  61   I/O     I
A<10>                         FB3_13  63   I/O     I
A<4>                          FB3_14  55   I/O     I
A<3>                          FB3_15  56   I/O     I
A<9>                          FB3_16  64   I/O     I
A<19>                         FB3_18  59   I/O     I
A<12>                         FB4_2   67   I/O     I
A<17>                         FB4_3   71   I/O     I
A<20>                         FB4_4   72   I/O     I
A<16>                         FB4_5   68   I/O     I
A<23>                         FB4_6   76   I/O     I
A<22>                         FB4_7   77   I/O     I
A<13>                         FB4_9   66   I/O     I
A<24>                         FB4_10  81   I/O     I
A<18>                         FB4_11  74   I/O     I
A<29>                         FB4_12  82   I/O     I
A<27>                         FB4_13  85   I/O     I
A<21>                         FB4_14  78   I/O     I
A<30>                         FB4_15  89   I/O     I
A<28>                         FB4_16  86   I/O     I
A<26>                         FB4_18  79   I/O     I

Legend:
Pin No. - ~ - User Assigned
*************************  Summary of UnMapped Logic  ************************

** 7 Buried Nodes **

Signal                        Total Total User
Name                          Pts   Inps  Assignment
$OpTx$$OpTx$FX_DC$57_INV$482  1     2     
$OpTx$FX_DC$48                2     2     
$OpTx$FX_DC$58                2     2     
$OpTx$FX_DC$59                2     2     
$OpTx$INV$41                  17    17    
DSACK<0>_BUFR                 16    19    
N01/N01_D2                    19    18    

**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               48/6
Number of signals used by logic mapping into function block:  48
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
nOE                   1       0   /\4   0     FB1_1   16    I/O     O
DSACK<0>              2       0   \/1   2     FB1_2   13    I/O     O
BYTE<2>               2       1<- \/4   0     FB1_3   18    I/O     O
D<3>                 10       5<-   0   0     FB1_4   20    I/O     I/O
BYTE<0>               4       0   /\1   0     FB1_5   14    I/O     O
BYTE<1>               3       0   \/2   0     FB1_6   15    I/O     O
D<2>                  9       4<-   0   0     FB1_7   25    I/O     I/O
BYTE<3>               2       0   /\2   1     FB1_8   17    I/O     O
IDE_BASEADR<0>        2       0   \/3   0     FB1_9   22    GCK/I/O GCK
D<0>                 11       6<-   0   0     FB1_10  28    I/O     I/O
SHUT_UP<1>            3       1<- /\3   0     FB1_11  23    GCK/I/O (b)
nWE                   1       0   /\1   3     FB1_12  33    I/O     O
(unused)              0       0   \/1   4     FB1_13  36    I/O     (b)
(unused)              0       0   \/5   0     FB1_14  27    GCK/I/O (b)
D<1>                 11       6<-   0   0     FB1_15  29    I/O     I/O
(unused)              0       0   \/5   0     FB1_16  39    I/O     I
nCS2                  8       5<- \/2   0     FB1_17  30    I/O     O
IO4                  11       6<-   0   0     FB1_18  40    I/O     O

Signals Used by Logic in Function Block
  1: $OpTx$INV$41         17: A<27>             33: D<3> 
  2: AUTO_CONFIG_DONE<0>  18: A<28>             34: DSACK<0>_BUFR 
  3: AUTO_CONFIG_DONE<1>  19: A<29>             35: IDE_ENABLE 
  4: A<0>                 20: A<2>              36: Mtrien_Dout 
  5: A<16>                21: A<30>             37: N01/N01_D2 
  6: A<17>                22: A<31>             38: D<0>.PIN 
  7: A<18>                23: A<3>              39: ROM_OUT_ENABLE_S 
  8: A<19>                24: A<4>              40: RW 
  9: A<1>                 25: A<5>              41: SHUT_UP<0> 
 10: A<20>                26: A<6>              42: SHUT_UP<1> 
 11: A<21>                27: BASEADR_4MB<0>    43: SIZ<0> 
 12: A<22>                28: BASEADR_4MB<1>    44: SIZ<1> 
 13: A<23>                29: BASEADR_4MB<2>    45: nAS 
 14: A<24>                30: D<0>              46: nDS 
 15: A<25>                31: D<1>              47: nOE_BUFR 
 16: A<26>                32: D<2>              48: nWE_BUFR 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
nOE                  ..............................................X... 1
DSACK<0>             .............XXXXXX.XX...........X..X............. 10
BYTE<2>              ...X....X..............................X..XX...... 5
D<3>                 .XXX....X..........X..XXXX......X..X.............. 11
BYTE<0>              ...X....X..............................X..XX...... 5
BYTE<1>              ...X....X..............................X..XX...... 5
D<2>                 .XXX....X..........X..XXXX.....X...X.............. 11
BYTE<3>              ...X....X..............................X.......... 3
IDE_BASEADR<0>       .XXXXXXXXXXXXXXXXXXXXXXXXX...........X.X....XX.... 29
D<0>                 .XXX....X..........X..XXXX...X.....X.............. 11
SHUT_UP<1>           .XXXXXXXXXXXXXXXXXXXXXXXXX.............X.X..XX.... 29
nWE                  ...............................................X.. 1
D<1>                 .XXX....X..........X..XXXX....X....X.............. 11
nCS2                 ..........XXXXXXXXX.XX....XXX...........X......... 15
IO4                  X............XXXXXXXXX............X...X........... 12
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               47/7
Number of signals used by logic mapping into function block:  47
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
IDE_BASEADR<7>        2       0     0   3     FB2_1   87    I/O     I
IDE_A<2>              1       0     0   4     FB2_2   94    I/O     O
IDE_CS<0>             1       0     0   4     FB2_3   91    I/O     O
IDE_A<0>              1       0     0   4     FB2_4   93    I/O     O
IDE_A<1>              1       0     0   4     FB2_5   95    I/O     O
IDE_R                 1       0     0   4     FB2_6   96    I/O     O
IDE_BASEADR<3>        2       0     0   3     FB2_7   3     GTS/I/O I
IDE_W                 1       0     0   4     FB2_8   97    I/O     O
IDE_BASEADR<1>        2       0     0   3     FB2_9   99    GSR/I/O GSR
BASEADR_4MB<2>        2       0     0   3     FB2_10  1     I/O     I
BASEADR_4MB<0>        2       0     0   3     FB2_11  4     GTS/I/O I
BASEADR_4MB<1>        3       0   \/1   1     FB2_12  6     I/O     I
ROM_ENABLE            1       1<- \/5   0     FB2_13  8     I/O     O
(unused)              0       0   \/5   0     FB2_14  9     I/O     I
nRAM_SEL             19      14<-   0   0     FB2_15  11    I/O     O
SHUT_UP<0>            4       3<- /\4   0     FB2_16  10    I/O     I
DSACK<1>              2       0   /\3   0     FB2_17  12    I/O     O
IDE_CS<1>             1       0     0   4     FB2_18  92    I/O     O

Signals Used by Logic in Function Block
  1: $OpTx$INV$41         17: A<25>             33: BASEADR_4MB<1> 
  2: AUTO_CONFIG_DONE<0>  18: A<26>             34: BASEADR_4MB<2> 
  3: AUTO_CONFIG_DONE<1>  19: A<27>             35: DSACK<1>_BUFR 
  4: A<0>                 20: A<28>             36: A<9> 
  5: A<12>                21: A<29>             37: A<10> 
  6: A<13>                22: A<2>              38: A<11> 
  7: A<16>                23: A<30>             39: IDE_ENABLE 
  8: A<17>                24: A<31>             40: N01/N01_D2 
  9: A<18>                25: A<3>              41: D<3>.PIN 
 10: A<19>                26: A<4>              42: D<2>.PIN 
 11: A<1>                 27: A<5>              43: D<1>.PIN 
 12: A<20>                28: A<6>              44: RW 
 13: A<21>                29: BASEADR<0>        45: SHUT_UP<0> 
 14: A<22>                30: BASEADR<1>        46: nAS 
 15: A<23>                31: BASEADR<2>        47: nDS 
 16: A<24>                32: BASEADR_4MB<0>   

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
IDE_BASEADR<7>       .XXX..XXXXXXXXXXXXXXXXXXXXXX............X..X.XX... 29
IDE_A<2>             .....................................X............ 1
IDE_CS<0>            ....X............................................. 1
IDE_A<0>             ...................................X.............. 1
IDE_A<1>             ....................................X............. 1
IDE_R                X..............XXXXXX.XX..............X....X.X.... 12
IDE_BASEADR<3>       .XXX..XXXXXXXXXXXXXXXXXXXXXX............X..X.XX... 29
IDE_W                X..............XXXXXX.XX...................X.X.... 11
IDE_BASEADR<1>       .XXX..XXXXXXXXXXXXXXXXXXXXXX..............XX.XX... 29
BASEADR_4MB<2>       .X.X..XXXXXXXXXXXXXXXXXXXXXX............XXXX.XX... 30
BASEADR_4MB<0>       .X.X..XXXXXXXXXXXXXXXXXXXXXX............X.XX.XX... 29
BASEADR_4MB<1>       .X.X..XXXXXXXXXXXXXXXXXXXXXX............XXXX.XX... 30
ROM_ENABLE           X..............XXXXXX.XX..............X........... 10
nRAM_SEL             XXX...XXXX.XXXXXXXXXX.XX....XXXXXX..........X..... 26
SHUT_UP<0>           .X.X..XXXXXXXXXXXXXXXXXXXXXX............X..XXXX... 29
DSACK<1>             ...............XXXXXX.XX..........X....X.......... 10
IDE_CS<1>            .....X............................................ 1
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               49/5
Number of signals used by logic mapping into function block:  49
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
IO5                   2       0   \/3   0     FB3_1   41    I/O     O
nCS1                  8       3<-   0   0     FB3_2   32    I/O     O
IDE_BASEADR<4>        2       0   \/3   0     FB3_3   49    I/O     (b)
(unused)              0       0   \/5   0     FB3_4   50    I/O     I
DSACK_16BIT          22      17<-   0   0     FB3_5   35    I/O     (b)
(unused)              0       0   /\5   0     FB3_6   53    I/O     I
IDE_BASEADR<2>        2       1<- /\4   0     FB3_7   54    I/O     I
BASEADR<0>            2       0   /\1   2     FB3_8   37    I/O     (b)
INT2                  1       0   \/4   0     FB3_9   42    I/O     O
(unused)              0       0   \/5   0     FB3_10  60    I/O     I
DSACK<1>_BUFR        19      14<-   0   0     FB3_11  52    I/O     I
(unused)              0       0   /\5   0     FB3_12  61    I/O     I
BASEADR<1>            2       0   \/2   1     FB3_13  63    I/O     I
(unused)              0       0   \/5   0     FB3_14  55    I/O     I
IDE_DSACK_D1         20      15<-   0   0     FB3_15  56    I/O     I
(unused)              0       0   /\5   0     FB3_16  64    I/O     I
IDE_BASEADR<6>        2       0   /\3   0     FB3_17  58    I/O     (b)
IDE_BASEADR<5>        2       0     0   3     FB3_18  59    I/O     I

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$69_INV$483  18: A<23>             34: BASEADR<2> 
  2: $OpTx$FX_DC$47                19: A<24>             35: BASEADR_4MB<0> 
  3: $OpTx$FX_DC$48                20: A<25>             36: BASEADR_4MB<1> 
  4: $OpTx$FX_DC$58                21: A<26>             37: BASEADR_4MB<2> 
  5: $OpTx$FX_DC$59                22: A<27>             38: DSACK_16BIT 
  6: $OpTx$INV$41                  23: A<28>             39: IDE_DSACK_D0 
  7: AUTO_CONFIG_DONE<0>           24: A<29>             40: IDE_DSACK_D1 
  8: AUTO_CONFIG_DONE<1>           25: A<2>              41: IDE_ENABLE 
  9: A<0>                          26: A<30>             42: IDE_WAIT 
 10: A<16>                         27: A<31>             43: D<2>.PIN 
 11: A<17>                         28: A<3>              44: D<1>.PIN 
 12: A<18>                         29: A<4>              45: D<0>.PIN 
 13: A<19>                         30: A<5>              46: RW 
 14: A<1>                          31: A<6>              47: SHUT_UP<0> 
 15: A<20>                         32: BASEADR<0>        48: nAS 
 16: A<21>                         33: BASEADR<1>        49: nDS 
 17: A<22>                        

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
IO5                  .....X............XXXXXX.XXX............X......... 11
nCS1                 ...............XXXXXXXXX.XX....XXX............X... 15
IDE_BASEADR<4>       ......XXXXXXXXXXXXXXXXXXXXXXXXX.............XX.XX. 29
DSACK_16BIT          .XXXXXXX.XXXX.XXXXXXXXXX.XX....X..X..XXXXX...XXX.. 33
IDE_BASEADR<2>       ......XXXXXXXXXXXXXXXXXXXXXXXXX...........X..X.XX. 29
BASEADR<0>           ......X.XXXXXXXXXXXXXXXXXXXXXXX............X.X.XX. 28
INT2                 .....X............XXXXXX.XX.............X......... 10
DSACK<1>_BUFR        ......XX.XXXX.XXXXXXXXXX.XX....XXXXXXX........XX.. 27
BASEADR<1>           ......X.XXXXXXXXXXXXXXXXXXXXXXX...........X..X.XX. 28
IDE_DSACK_D1         X....XXX.XXXX.XXXXXXXXXX.XX....XXXXXX.XX......XX.. 30
IDE_BASEADR<6>       ......XXXXXXXXXXXXXXXXXXXXXXXXX...........X..X.XX. 29
IDE_BASEADR<5>       ......XXXXXXXXXXXXXXXXXXXXXXXXX............X.X.XX. 29
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               44/10
Number of signals used by logic mapping into function block:  44
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
IDE_ENABLE            1       1<- \/5   0     FB4_1   65    I/O     (b)
ROM_OUT_ENABLE_S     19      14<-   0   0     FB4_2   67    I/O     I
(unused)              0       0   /\5   0     FB4_3   71    I/O     I
BASEADR<2>            2       1<- /\4   0     FB4_4   72    I/O     I
AUTO_CONFIG_DONE<0>   2       0   /\1   2     FB4_5   68    I/O     I
$OpTx$FX_DC$47        2       0   \/1   2     FB4_6   76    I/O     I
$OpTx$$OpTx$FX_DC$69_INV$483
                      2       1<- \/4   0     FB4_7   77    I/O     I
nWE_BUFR             16      11<-   0   0     FB4_8   70    I/O     (b)
(unused)              0       0   /\5   0     FB4_9   66    I/O     I
AUTO_CONFIG_DONE<1>   2       0   /\2   1     FB4_10  81    I/O     I
(unused)              0       0   \/5   0     FB4_11  74    I/O     I
(unused)              0       0   \/5   0     FB4_12  82    I/O     I
(unused)              0       0   \/5   0     FB4_13  85    I/O     I
nOE_BUFR             16      15<- \/4   0     FB4_14  78    I/O     I
(unused)              0       0   \/5   0     FB4_15  89    I/O     I
IDE_DSACK_D0         18      13<-   0   0     FB4_16  86    I/O     I
STERM                 0       0   /\4   1     FB4_17  90    I/O     O
Mtrien_Dout           2       0   \/1   2     FB4_18  79    I/O     I

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$57_INV$482  16: A<22>             31: BASEADR<0> 
  2: $OpTx$$OpTx$FX_DC$69_INV$483  17: A<23>             32: BASEADR<1> 
  3: $OpTx$FX_DC$58                18: A<24>             33: BASEADR<2> 
  4: $OpTx$FX_DC$59                19: A<25>             34: BASEADR_4MB<0> 
  5: $OpTx$INV$41                  20: A<26>             35: BASEADR_4MB<1> 
  6: AUTO_CONFIG_DONE<0>           21: A<27>             36: BASEADR_4MB<2> 
  7: AUTO_CONFIG_DONE<1>           22: A<28>             37: IDE_DSACK_D0 
  8: A<0>                          23: A<29>             38: IDE_ENABLE 
  9: A<16>                         24: A<2>              39: D<3>.PIN 
 10: A<17>                         25: A<30>             40: ROM_OUT_ENABLE_S 
 11: A<18>                         26: A<31>             41: RW 
 12: A<19>                         27: A<3>              42: SHUT_UP<0> 
 13: A<1>                          28: A<4>              43: nAS 
 14: A<20>                         29: A<5>              44: nDS 
 15: A<21>                         30: A<6>             

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
IDE_ENABLE           ....X............XXXXXX.XX...........X..X.X....... 12
ROM_OUT_ENABLE_S     XXXXX.........XX.XXXXXX.XX....XX.XX.X..X.XX....... 23
BASEADR<2>           .....X.XXXXXXXXXXXXXXXXXXXXXXX........X.X.XX...... 28
AUTO_CONFIG_DONE<0>  .....X.XXXXXXXXXXXXXXXX.XXXXXX..........X.XX...... 26
$OpTx$FX_DC$47       ...............X...............X.................. 2
$OpTx$$OpTx$FX_DC$69_INV$483 
                     .....XX.XXXX.XXXX................................. 10
nWE_BUFR             ..............XXXXXXXXX.XX....XXXXXX....XX.X...... 20
AUTO_CONFIG_DONE<1>  .....XXXXXXXXXXXXXXXXXX.XXXXXX..........X.XX...... 27
nOE_BUFR             ..............XXXXXXXXX.XX....XXXXXX....XX.X...... 20
IDE_DSACK_D0         .X..X.........XXXXXXXXX.XX....XXXXXXX....XX....... 22
STERM                .................................................. 0
Mtrien_Dout          .....XX.XXXX.XXXXXXXXXX.XX..............X.X....... 20
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$$OpTx$FX_DC$69_INV$483 <= ((NOT AUTO_CONFIG_DONE(1) AND NOT A(20) AND NOT A(18) AND NOT A(16) AND 
	NOT A(17) AND A(19) AND A(21) AND A(22) AND A(23))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(20) AND NOT A(18) AND NOT A(16) AND 
	NOT A(17) AND A(19) AND A(21) AND A(22) AND A(23)));


$OpTx$FX_DC$47 <= NOT (A(22)
	 XOR 
$OpTx$FX_DC$47 <= NOT (BASEADR(1));

FTCPE_AUTO_CONFIG_DONE0: FTCPE port map (AUTO_CONFIG_DONE(0),AUTO_CONFIG_DONE_T(0),clk,NOT reset,'0',AUTO_CONFIG_DONE_CE(0));
AUTO_CONFIG_DONE_T(0) <= (NOT AUTO_CONFIG_DONE(0) AND NOT A(1) AND NOT A(4) AND A(6) AND 
	NOT A(5) AND NOT A(0) AND A(3));
AUTO_CONFIG_DONE_CE(0) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(20) AND NOT A(18) AND 
	NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));

FTCPE_AUTO_CONFIG_DONE1: FTCPE port map (AUTO_CONFIG_DONE(1),AUTO_CONFIG_DONE_T(1),clk,NOT reset,'0',AUTO_CONFIG_DONE_CE(1));
AUTO_CONFIG_DONE_T(1) <= (NOT AUTO_CONFIG_DONE(1) AND NOT A(1) AND NOT A(4) AND A(6) AND 
	NOT A(5) AND NOT A(0) AND A(3));
AUTO_CONFIG_DONE_CE(1) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_BASEADR0: FDCPE port map (BASEADR(0),D(1).PIN,clk,'0',NOT reset,BASEADR_CE(0));
BASEADR_CE(0) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(1) AND NOT A(4) AND 
	A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(20) AND NOT A(18) AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND A(3) AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));

FDCPE_BASEADR1: FDCPE port map (BASEADR(1),D(2).PIN,clk,NOT reset,'0',BASEADR_CE(1));
BASEADR_CE(1) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(1) AND NOT A(4) AND 
	A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(20) AND NOT A(18) AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND A(3) AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));

FDCPE_BASEADR2: FDCPE port map (BASEADR(2),D(3).PIN,clk,NOT reset,'0',BASEADR_CE(2));
BASEADR_CE(2) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(1) AND NOT A(4) AND 
	A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(20) AND NOT A(18) AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND A(3) AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));

FDCPE_BASEADR_4MB0: FDCPE port map (BASEADR_4MB(0),BASEADR_4MB_D(0),clk,NOT reset,'0',BASEADR_4MB_CE(0));
BASEADR_4MB_D(0) <= (NOT D(1).PIN AND NOT D(3).PIN);
BASEADR_4MB_CE(0) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(1) AND NOT A(4) AND 
	A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(20) AND NOT A(18) AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND A(3) AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));

FDCPE_BASEADR_4MB1: FDCPE port map (BASEADR_4MB(1),BASEADR_4MB_D(1),clk,'0',NOT reset,BASEADR_4MB_CE(1));
BASEADR_4MB_D(1) <= ((D(1).PIN AND NOT D(2).PIN AND NOT D(3).PIN)
	OR (NOT D(1).PIN AND D(2).PIN AND NOT D(3).PIN));
BASEADR_4MB_CE(1) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(1) AND NOT A(4) AND 
	A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(20) AND NOT A(18) AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND A(3) AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));

FDCPE_BASEADR_4MB2: FDCPE port map (BASEADR_4MB(2),BASEADR_4MB_D(2),clk,NOT reset,'0',BASEADR_4MB_CE(2));
BASEADR_4MB_D(2) <= (D(1).PIN AND D(2).PIN AND NOT D(3).PIN);
BASEADR_4MB_CE(2) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(1) AND NOT A(4) AND 
	A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(20) AND NOT A(18) AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND A(3) AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));


BYTE(0) <= ((NOT RW AND NOT A(1) AND SIZ(1) AND NOT SIZ(0))
	OR (NOT RW AND NOT A(1) AND NOT SIZ(1) AND SIZ(0))
	OR (NOT RW AND NOT A(1) AND SIZ(0) AND NOT A(0))
	OR (NOT RW AND NOT SIZ(1) AND SIZ(0) AND NOT A(0)));


BYTE(1) <= ((NOT RW AND A(1) AND A(0))
	OR (NOT RW AND NOT A(1) AND NOT SIZ(1) AND SIZ(0))
	OR (NOT RW AND NOT A(1) AND SIZ(1) AND NOT SIZ(0) AND NOT A(0)));


BYTE(2) <= ((NOT RW AND NOT SIZ(1) AND SIZ(0) AND NOT A(0))
	OR (NOT RW AND A(1)));


BYTE(3) <= ((NOT RW AND A(1))
	OR (NOT RW AND A(0)));

FDCPE_D0: FDCPE port map (D_I(0),D(0),clk,'0','0');
D(0) <= ((NOT AUTO_CONFIG_DONE(1) AND NOT A(4) AND A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT A(4) AND 
	NOT A(6) AND A(5) AND NOT A(0) AND A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(0) AND A(1) AND NOT A(4) AND NOT A(6) AND 
	A(5) AND NOT A(0) AND A(2) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(1) AND 
	A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(4) AND 
	NOT A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND A(3))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(1) AND A(4) AND NOT A(6) AND 
	NOT A(5) AND NOT A(0) AND A(2) AND NOT A(3))
	OR (NOT D(0) AND AUTO_CONFIG_DONE(0) AND AUTO_CONFIG_DONE(1))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(1) AND NOT A(4) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(4) AND A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(1) AND 
	NOT A(4) AND NOT A(6) AND A(5) AND NOT A(0) AND A(2)));
D(0) <= D_I(0) when D_OE(0) = '1' else 'Z';
D_OE(0) <= NOT Mtrien_Dout;

FDCPE_D1: FDCPE port map (D_I(1),D(1),clk,'0','0');
D(1) <= ((EXP10_.EXP)
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT A(4) AND 
	NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT A(1) AND 
	A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND A(2))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT A(1) AND 
	A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND A(3))
	OR (NOT AUTO_CONFIG_DONE(0) AND A(1) AND A(4) AND NOT A(6) AND 
	NOT A(5) AND NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(0) AND A(1) AND NOT A(4) AND NOT A(6) AND 
	NOT A(5) AND NOT A(0) AND A(2) AND NOT A(3))
	OR (NOT D(1) AND AUTO_CONFIG_DONE(0) AND AUTO_CONFIG_DONE(1))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(4) AND A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(1) AND 
	NOT A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(4) AND 
	NOT A(6) AND NOT A(5) AND NOT A(0) AND A(2) AND A(3)));
D(1) <= D_I(1) when D_OE(1) = '1' else 'Z';
D_OE(1) <= NOT Mtrien_Dout;

FDCPE_D2: FDCPE port map (D_I(2),D(2),clk,'0','0');
D(2) <= ((AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(1) AND 
	NOT A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(1) AND 
	NOT A(4) AND NOT A(6) AND NOT A(0) AND A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(1) AND A(1) AND A(4) AND NOT A(6) AND 
	NOT A(5) AND NOT A(0) AND A(2) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT A(1) AND 
	A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND A(2) AND A(3))
	OR (NOT D(2) AND AUTO_CONFIG_DONE(0) AND AUTO_CONFIG_DONE(1))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(4) AND A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(1) AND NOT A(4) AND A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(0) AND A(1) AND A(4) AND NOT A(6) AND 
	NOT A(5) AND NOT A(0) AND A(2) AND NOT A(3)));
D(2) <= D_I(2) when D_OE(2) = '1' else 'Z';
D_OE(2) <= NOT Mtrien_Dout;

FDCPE_D3: FDCPE port map (D_I(3),D(3),clk,'0','0');
D(3) <= ((NOT AUTO_CONFIG_DONE(0) AND A(1) AND A(4) AND NOT A(6) AND 
	NOT A(5) AND NOT A(0) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(1) AND NOT A(4) AND A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND A(1) AND 
	A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND A(2))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT A(1) AND 
	A(4) AND NOT A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND A(3))
	OR (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT A(1) AND 
	NOT A(4) AND NOT A(6) AND A(5) AND NOT A(0) AND A(2) AND NOT A(3))
	OR (NOT D(3) AND AUTO_CONFIG_DONE(0) AND AUTO_CONFIG_DONE(1))
	OR (NOT AUTO_CONFIG_DONE(0) AND A(1) AND NOT A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(4) AND A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3))
	OR (NOT AUTO_CONFIG_DONE(1) AND A(1) AND NOT A(6) AND NOT A(5) AND 
	NOT A(0) AND NOT A(2) AND NOT A(3)));
D(3) <= D_I(3) when D_OE(3) = '1' else 'Z';
D_OE(3) <= NOT Mtrien_Dout;


DSACK_I(0) <= DSACK(0)_BUFR;
DSACK(0) <= DSACK_I(0) when DSACK_OE(0) = '1' else 'Z';
DSACK_OE(0) <= (NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND N01/N01_D2);


DSACK_I(1) <= DSACK(1)_BUFR;
DSACK(1) <= DSACK_I(1) when DSACK_OE(1) = '1' else 'Z';
DSACK_OE(1) <= (NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND N01/N01_D2);


DSACK(1)_BUFR <= NOT (((NOT DSACK_16BIT)
	OR (INT2_OBUF$BUF0.EXP)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))));

FDCPE_DSACK_16BIT: FDCPE port map (DSACK_16BIT,DSACK_16BIT_D,NOT clk,'0',NOT reset);
DSACK_16BIT_D <= ((IDE_BASEADR(4).EXP)
	OR (RW AND NOT SHUT_UP(0) AND BASEADR(0) AND NOT IDE_DSACK_D1 AND 
	NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58)
	OR (NOT RW AND NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT DSACK_16BIT AND 
	NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR(0) AND NOT nAS AND 
	IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	IDE_WAIT AND NOT A(28) AND NOT A(27) AND A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT DSACK_16BIT AND NOT nAS AND 
	IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT IDE_WAIT AND NOT A(28) AND NOT A(27) AND A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58)
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT DSACK_16BIT AND NOT nAS AND 
	IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT IDE_WAIT AND NOT A(28) AND NOT A(27) AND NOT A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58)
	OR (IDE_BASEADR(2).EXP)
	OR (RW AND NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT IDE_DSACK_D1 AND 
	NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58)
	OR (RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT IDE_DSACK_D1 AND 
	NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND $OpTx$FX_DC$48 AND 
	$OpTx$FX_DC$59)
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT DSACK_16BIT AND 
	NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND $OpTx$FX_DC$48 AND 
	$OpTx$FX_DC$59)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR(0) AND NOT nAS AND 
	IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	IDE_WAIT AND NOT A(28) AND NOT A(27) AND NOT A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58)
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT DSACK_16BIT AND NOT nAS AND 
	IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT IDE_WAIT AND NOT A(28) AND NOT A(27) AND A(21) AND $OpTx$FX_DC$48 AND 
	$OpTx$FX_DC$59)
	OR (RW AND NOT IDE_DSACK_D1 AND NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND 
	NOT $OpTx$INV$41)
	OR (NOT RW AND NOT DSACK_16BIT AND NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND 
	NOT $OpTx$INV$41)
	OR (NOT IDE_DSACK_D0 AND NOT nAS AND IDE_ENABLE AND NOT A(31) AND 
	NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND IDE_WAIT AND 
	NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41)
	OR (NOT DSACK_16BIT AND NOT nAS AND IDE_ENABLE AND NOT A(31) AND NOT A(30) AND 
	NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT IDE_WAIT AND NOT A(28) AND 
	NOT A(27) AND NOT $OpTx$INV$41)
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR(0) AND NOT DSACK_16BIT AND 
	NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND $OpTx$FX_DC$47 AND 
	$OpTx$FX_DC$58));


































IDE_A(0) <= A(9);


IDE_A(1) <= A(10);


IDE_A(2) <= A(11);

FDCPE_IDE_BASEADR0: FDCPE port map (IDE_BASEADR(0),D(0).PIN,clk,'0',NOT reset,IDE_BASEADR_CE(0));
IDE_BASEADR_CE(0) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_IDE_BASEADR1: FDCPE port map (IDE_BASEADR(1),D(1).PIN,clk,NOT reset,'0',IDE_BASEADR_CE(1));
IDE_BASEADR_CE(1) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_IDE_BASEADR2: FDCPE port map (IDE_BASEADR(2),D(2).PIN,clk,NOT reset,'0',IDE_BASEADR_CE(2));
IDE_BASEADR_CE(2) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_IDE_BASEADR3: FDCPE port map (IDE_BASEADR(3),D(3).PIN,clk,'0',NOT reset,IDE_BASEADR_CE(3));
IDE_BASEADR_CE(3) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_IDE_BASEADR4: FDCPE port map (IDE_BASEADR(4),D(0).PIN,clk,NOT reset,'0',IDE_BASEADR_CE(4));
IDE_BASEADR_CE(4) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND NOT A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_IDE_BASEADR5: FDCPE port map (IDE_BASEADR(5),D(1).PIN,clk,'0',NOT reset,IDE_BASEADR_CE(5));
IDE_BASEADR_CE(5) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND NOT A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_IDE_BASEADR6: FDCPE port map (IDE_BASEADR(6),D(2).PIN,clk,'0',NOT reset,IDE_BASEADR_CE(6));
IDE_BASEADR_CE(6) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND NOT A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));

FDCPE_IDE_BASEADR7: FDCPE port map (IDE_BASEADR(7),D(3).PIN,clk,'0',NOT reset,IDE_BASEADR_CE(7));
IDE_BASEADR_CE(7) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND NOT A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND NOT A(2) AND 
	NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT nDS AND A(3) AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));


IDE_CS(0) <= NOT A(12);


IDE_CS(1) <= NOT A(13);

FDCPE_IDE_DSACK_D0: FDCPE port map (IDE_DSACK_D0,IDE_DSACK_D0_D,NOT clk,'0',NOT reset);
IDE_DSACK_D0_D <= ((nOE_BUFR.EXP)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND NOT A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT IDE_DSACK_D0 AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND 
	$OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41 AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483));

FDCPE_IDE_DSACK_D1: FDCPE port map (IDE_DSACK_D1,IDE_DSACK_D1_D,NOT clk,'0',NOT reset);
IDE_DSACK_D1_D <= ((BASEADR(1).EXP)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR(0) AND 
	BASEADR(1) AND NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	NOT A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR(0) AND 
	NOT BASEADR(1) AND NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	NOT A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR(0) AND 
	BASEADR(1) AND NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	NOT A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR(0) AND 
	NOT BASEADR(1) AND BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR(0) AND 
	NOT BASEADR(1) AND NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND 
	NOT A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (IDE_BASEADR(6).EXP)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	NOT A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT IDE_DSACK_D1 AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND 
	$OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT IDE_DSACK_D0 AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41 AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR(0) AND 
	BASEADR(1) AND BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR(0) AND 
	NOT BASEADR(1) AND BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR(0) AND 
	BASEADR(1) AND BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	A(23) AND NOT $OpTx$$OpTx$FX_DC$69_INV$483));

FTCPE_IDE_ENABLE: FTCPE port map (IDE_ENABLE,IDE_ENABLE_T,NOT clk,NOT reset,'0');
IDE_ENABLE_T <= (NOT RW AND NOT nAS AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41);


IDE_R <= NOT ((RW AND NOT nAS AND IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41));


IDE_W <= NOT ((NOT RW AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41));


INT2 <= NOT ((NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41));


IO4 <= ((IDE_ENABLE AND A(2))
	OR (A(2) AND A(27))
	OR (A(2) AND $OpTx$INV$41)
	OR (ROM_OUT_ENABLE_S AND NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND 
	NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND 
	NOT $OpTx$INV$41)
	OR (A(2) AND A(29))
	OR (A(2) AND A(26))
	OR (A(2) AND A(31))
	OR (A(2) AND A(30))
	OR (A(2) AND A(25))
	OR (A(2) AND A(24))
	OR (A(2) AND A(28)));


IO5 <= ((A(3))
	OR (NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41));

FDCPE_Mtrien_Dout: FDCPE port map (Mtrien_Dout,Mtrien_Dout_D,clk,'0',NOT reset);
Mtrien_Dout_D <= ((NOT AUTO_CONFIG_DONE(0) AND RW AND NOT nAS AND NOT A(20) AND NOT A(18) AND 
	NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND 
	NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND A(23))
	OR (NOT AUTO_CONFIG_DONE(1) AND RW AND NOT nAS AND NOT A(20) AND NOT A(18) AND 
	NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND 
	NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND A(23)));


ROM_ENABLE <= NOT ((NOT IDE_ENABLE AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41));

FDCPE_ROM_OUT_ENABLE_S: FDCPE port map (ROM_OUT_ENABLE_S,ROM_OUT_ENABLE_S_D,NOT clk,'0',NOT reset);
ROM_OUT_ENABLE_S_D <= ((NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND $OpTx$FX_DC$58 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND $OpTx$FX_DC$58 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND $OpTx$FX_DC$59 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND $OpTx$FX_DC$59 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND $OpTx$FX_DC$59 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (BASEADR(2).EXP)
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND $OpTx$FX_DC$59 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR(0) AND 
	BASEADR(1) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483 AND $OpTx$FX_DC$58 AND $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND BASEADR(0) AND 
	NOT BASEADR(1) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483 AND $OpTx$FX_DC$58 AND $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR(0) AND 
	BASEADR(1) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483 AND $OpTx$FX_DC$58 AND $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND NOT IDE_DSACK_D0 AND NOT BASEADR(0) AND 
	NOT BASEADR(1) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483 AND $OpTx$FX_DC$58 AND $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND 
	$OpTx$$OpTx$FX_DC$69_INV$483)
	OR (NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT IDE_DSACK_D0 AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND 
	NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41 AND 
	NOT $OpTx$$OpTx$FX_DC$69_INV$483 AND $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND $OpTx$FX_DC$58 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482)
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT ROM_OUT_ENABLE_S AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND $OpTx$FX_DC$58 AND 
	NOT $OpTx$$OpTx$FX_DC$57_INV$482));

FTCPE_SHUT_UP0: FTCPE port map (SHUT_UP(0),SHUT_UP_T(0),clk,'0',NOT reset,SHUT_UP_CE(0));
SHUT_UP_T(0) <= ((NOT SHUT_UP(0) AND D(3).PIN AND NOT A(1) AND NOT A(4) AND A(6) AND 
	NOT A(5) AND NOT A(0) AND A(3))
	OR (NOT SHUT_UP(0) AND NOT A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND 
	A(2) AND A(3))
	OR (SHUT_UP(0) AND NOT D(3).PIN AND NOT A(1) AND NOT A(4) AND A(6) AND 
	NOT A(5) AND NOT A(0) AND NOT A(2) AND A(3)));
SHUT_UP_CE(0) <= (NOT AUTO_CONFIG_DONE(0) AND NOT RW AND NOT nAS AND NOT A(20) AND NOT A(18) AND 
	NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND NOT nDS AND 
	NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND A(19) AND A(21) AND A(22) AND 
	A(23));

FTCPE_SHUT_UP1: FTCPE port map (SHUT_UP(1),SHUT_UP_T(1),clk,'0',NOT reset,SHUT_UP_CE(1));
SHUT_UP_T(1) <= ((NOT SHUT_UP(1) AND NOT A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND 
	A(2) AND A(3))
	OR (SHUT_UP(1) AND NOT A(1) AND NOT A(4) AND A(6) AND NOT A(5) AND NOT A(0) AND 
	NOT A(2) AND A(3)));
SHUT_UP_CE(1) <= (AUTO_CONFIG_DONE(0) AND NOT AUTO_CONFIG_DONE(1) AND NOT RW AND 
	NOT nAS AND NOT A(20) AND NOT A(18) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(16) AND NOT A(17) AND 
	A(19) AND A(21) AND A(22) AND A(23));


STERM <= '1';


nCS1 <= NOT (((NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))));


nCS2 <= NOT (((NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))));


nOE <= nOE_BUFR;


nOE_BUFR <= NOT (((EXP23_.EXP)
	OR (RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	NOT A(23))
	OR (RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	A(23))
	OR (RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	NOT A(23))
	OR (RW AND NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	A(23))
	OR (RW AND NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	NOT A(23))
	OR (RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	A(23))));


nRAM_SEL <= NOT (((INT2_OBUF.EXP)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT $OpTx$INV$41)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23))));


nWE <= nWE_BUFR;


nWE_BUFR <= NOT (((NOT RW AND NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	NOT A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND 
	A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND 
	NOT A(23))
	OR (AUTO_CONFIG_DONE(1).EXP)
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND NOT A(24) AND 
	NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND 
	NOT A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND BASEADR_4MB(0) AND 
	NOT BASEADR_4MB(1) AND NOT BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND 
	NOT A(23))
	OR (NOT RW AND NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND 
	BASEADR_4MB(1) AND BASEADR_4MB(2) AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND 
	NOT A(25) AND NOT A(24) AND NOT nDS AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND 
	A(23))));

********** UnMapped Logic **********

** Buried Nodes **


$OpTx$$OpTx$FX_DC$57_INV$482 <= (RW AND NOT IDE_ENABLE);


$OpTx$FX_DC$48 <= NOT (A(22)
	 XOR 
$OpTx$FX_DC$48 <= NOT (BASEADR_4MB(1));


$OpTx$FX_DC$58 <= NOT (A(23)
	 XOR 
$OpTx$FX_DC$58 <= NOT (BASEADR(2));


$OpTx$FX_DC$59 <= NOT (A(23)
	 XOR 
$OpTx$FX_DC$59 <= NOT (BASEADR_4MB(2));


$OpTx$INV$41 <= ((SHUT_UP(1))
	OR (IDE_BASEADR(3) AND NOT A(19))
	OR (NOT IDE_BASEADR(3) AND A(19))
	OR (IDE_BASEADR(4) AND NOT A(20))
	OR (NOT IDE_BASEADR(4) AND A(20))
	OR (IDE_BASEADR(6) AND NOT A(22))
	OR (NOT IDE_BASEADR(6) AND A(22))
	OR (IDE_BASEADR(2) AND NOT A(18))
	OR (NOT IDE_BASEADR(2) AND A(18))
	OR (IDE_BASEADR(5) AND NOT A(21))
	OR (NOT IDE_BASEADR(5) AND A(21))
	OR (IDE_BASEADR(7) AND NOT A(23))
	OR (NOT IDE_BASEADR(7) AND A(23))
	OR (IDE_BASEADR(0) AND NOT A(16))
	OR (NOT IDE_BASEADR(0) AND A(16))
	OR (IDE_BASEADR(1) AND NOT A(17))
	OR (NOT IDE_BASEADR(1) AND A(17)));


DSACK(0)_BUFR <= NOT (((NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT nAS AND NOT A(31) AND NOT A(30) AND NOT A(29) AND NOT A(26) AND NOT A(25) AND 
	NOT A(24) AND NOT A(28) AND NOT A(27) AND NOT A(21) AND NOT A(22) AND NOT A(23))));


N01/N01_D2 <= ((NOT $OpTx$INV$41)
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	BASEADR(2) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	BASEADR(2) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR(0) AND NOT BASEADR(1) AND 
	NOT BASEADR(2) AND NOT A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(21) AND A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	BASEADR_4MB(2) AND NOT A(21) AND NOT A(22) AND A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT A(21) AND A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT SHUT_UP(0) AND NOT BASEADR_4MB(0) AND NOT BASEADR_4MB(1) AND 
	NOT BASEADR_4MB(2) AND NOT A(21) AND NOT A(22) AND NOT A(23))
	OR (NOT AUTO_CONFIG_DONE(0) AND NOT A(20) AND NOT A(18) AND NOT A(16) AND 
	NOT A(17) AND A(19) AND A(21) AND A(22) AND A(23))
	OR (NOT AUTO_CONFIG_DONE(1) AND NOT A(20) AND NOT A(18) AND NOT A(16) AND 
	NOT A(17) AND A(19) AND A(21) AND A(22) AND A(23)));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc9572xl-10-TQ100
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 25
</pre>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
